第8天
2018/7/18
一、java中的装箱与拆箱
	java中的八大基本数据类型都会有一个引用类型包装类
	这个包装类可以直接赋予基本数据类型的值，基本数据类型与引用类型可以直接赋值
	这种现象称为:装箱与拆箱
	
	装箱:基本数据类型直接赋予引用类型
	
	拆箱:引用类型直接赋予基本数据类型
	
	八大基本数据类型包装类+String类拥有装箱与拆箱
	Byte、Short、Integer、Long、Float、Double、Boolean、Character、String
	
*****二、static关键字
	1、static关键字的作用
		static关键字可以修饰变量、方法、代码块
		a、static修饰变量
			static修饰变量称为静态变量，静态变量共享一片内存，可以直接用类名调用
			
			new关键字每次创建对象都会分配新的内存空间，但使用static修饰之后，
			不在分配新的内存空间，与之间的对象共享一片内存，之间对象没有就分配新的内存空间
			
			对象创建一定会初始化全局属性(全局变量)
			
		b、static修饰方法
		static修饰的方法称为静态方法或者类方法，可以直接用类名调用
		特点:
			静态方法只能使用静态变量 
			可以直接用类名调用，不能使用this、super关键字
			静态方法只能调用静态方法
			静态方法不能被重写
		
		c、static修饰语句块
		static修饰语句块称为静态语句块，最早被执行，至始至终只执行一次，格式如下:
			static{
				//语句块
			}
			
		2、静态语句块、动态语句块、构造方法
		a、优先级
			静态语句块>动态语句块>构造方法
			
		b、执行次数
			静态语句块:至始至终只执行一次，不管有多少个对象
			动态语句块与构造方法:创建一个对象时，执行一次
			
		3、静态变量与方法的调用
		类名.属性名
		类名.方法名
		
		
   *****4、执行main方法之前的动作
			启动jdk--->JVM(jdk的虚拟内存)--->读取class文件-->优先初始化静态变量-->main方法-->第一句代码
			
   *****5、对象创建之间的对象的动作
			静态语句块-->动态语句块-->构造方法-->初始化全局变量-->对象的诞生
			
三、封装
	把类中的属性与方法的实现隐藏，符合面向对象的开闭原则，
	属性对外是闭，方法对外是开
	通过get()、set()方法取值/赋值
	实现步骤:		
		1、把属性私有化
		2、提供get/set方法取值/赋值
		
		注:get/set方法命名规则，把属性首字母大写，前面加get或set
		
		对象给属性赋值有两种方法:
			1、set方法
			2、构造方法
			
四、继承
	在面向对象编程中，类与类之间可以产生继承关系，子类可以继承父类
	子类拥有父类一切的属性与方法，除私有的以外
	
	1、类的继承格式
	public class 类名 extends 父类{
		//类体
	}
	
*****2、方法的重写
	方法重写发生在父类与子类中，方法名相同，参数列表相同，返回值相同,
	访问修饰符不能比父类的更小
	
*****方法的重载
	发生在本类中，方法名相同，参数列表不同，与返回值无关，与修饰符无关
		
	多态的具体表现:方法的重写与重载
	调用方法的两大要素：方法名+参数列表
	
	3、java继承的特点
		java只能单继承，一个子类只能有一个父类，一个父类可以拥有多个子类
		java中每一个了类都直接或者间接继承了java.lang.Object;
		
	4、子类与父类的构造过程
		子类继承父类的构造过程优先级顺序
			a、父类静态语句块
			b、子类静态语句块
			c、父类动态语句块
			d、父类构造方法
			e、子类动态语句块
			f、子类构造方法
			
		创建子类之前，优先创建父类对象，构造方法比较特殊，不能被继承，不能被重写
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		