第3天

一、for循环
	for(表达式1;表达式2;表达式3){
		//循环体代码
	}
	注:表达式1至始至终只执行一次
	表达式1：用于初始化变量，定义变量
	表达式2：用于条件判断，是否符合循环条件，
			表达式2返回true,循环继续、表达式2返回false,循环终止
	表达式3：改变判断条件的变量值
	
	for循环的执行顺序：
	表达式1-->表达式2-->循环体代码-->表达式3-->表达式2-->......
	表达式1至始至终只执行一次
	
	所以表达式都可以省略不写，但是两个分号不能省略
	
	什么时候使用while循环，什么时候使用for
	知道循环次数，就使用for，
	不知道循环次数，就用while
	
*****二、continue关键字
	continue关键字使用在循环中，结束本次循环，进入下一个循环
	
*****三、break关键字
	break关键字使用在循环与switch语句中，跳出指定的代码块

	
java的数组	
四、什么是数组
	数组是用来存储一组相同类型的数据，创建数组时会划分出一块连续的内存空间存储
	数组长度是固定的，内存地址(指针)
	
	注：数组在所有的数据结构中，查询效率是最高的
		数组是引用类型
	
*****五、数组的特点:
	1、同种数据类型
	2、固定长度
	3、有序排列
	4、存储的元素内存地址是连续的（连续的指针）
	
*****六、数组的创建方式
	1、第一种:
		数据类型[] 数组名=new 数据类型[长度]
		int[] array=new int[10];
	2、第二种:
		数据类型[] 数组名={元素1,元素2,元素3,....,元素n}
		int[] array={1,2,3,4,5,6};
	3、第三种:
		数据类型[] 数组名= new 数据类型[]{元素1,元素2,元素3,....,元素n};
		int[] array=new int[]{1,2,3,4,5,6};
	
	注：数组的下标从0开始
		数组最大下标=数组.length-1;
		超出范围，抛出数组下标越界异常:java.lang. ArrayIndexOutOfBoundsException	

*****七、数组的遍历
	1、顺序遍历
	//顺序遍历 foreach遍历		没有下标		效率高，推荐使用
		for(int element:array){
			System.out.println(element);
		}
	//顺序遍历		下标
		for(int i=0;i<array.length;i++){
			System.out.println(array[i]);
		}
	//逆序遍历		下标
		for(int j=array.length-1;j>=0;j--){
			System.out.println(array[j]);
		}
		
		
		
		
		
		
		
		
		