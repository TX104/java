第4天

一、两数交换，不使用第三变量
	int a=10;
	int b=20;
	a=a+b;
	b=a-b;
	a=a-b;
	
5,18,1,3,9,4,7

冒泡排序		小的数往前冒，大的数往后冒
5,18,1,3,9,4,7
5,1,18,3,9,4,7
5,1,3,18,9,4,7
5,1,3,9,18,4,7
5,1,3,9,4,18,7
5,1,3,9,4,7,18

---------------------

1,5,3,9,4,7,18
1,3,5,9,4,7,18
1,3,5,9,4,7,18
1,3,5,4,9,7,18
1,3,5,4,7,9,18

--------------------

1,3,5,4,7,9,18
1,3,5,4,7,9,18
1,3,4,5,7,9,18
1,3,4,5,7,9,18

--------------------

1,3,4,5,7,9,18
1,3,4,5,7,9,18
1,3,4,5,7,9,18

---------------------

1,3,4,5,7,9,18
1,3,4,5,7,9,18

--------------------

1,3,4,5,7,9,18

选择排序
5,18,1,3,9,4,7
选择排序		找出最小数的下标，跟第一个位置互换

1,18,5,3,9,4,7
1,3,5,18,9,4,7
1,3,4,18,9,5,7
1,3,4,5,9,18,7
1,3,4,5,7,18,9
1,3,4,5,7,9,18

*****二、JVM的堆内存与栈内存
		栈内存与堆内存就是JVM的内存结构
		栈内存：
			1、基本数据类型的值
			2、引用类型的指针
		堆内存：
			引用类型的值

		基本数据类型的赋值，称为值赋值，也称为值变量
		引用类型的赋值，称为指针赋值，也称为指针变量
		
三、二维数组
	1、什么是二维数组
		二维数组是以横向与纵向来存储同一种类型的数据
	
	2、二维数组创建
	a、数据类型[][]	数组名=new 数据类型[行数][列数]
		int[][]	array=new int[3][5];
	b、数据类型[][] 数组名=new 数据类型[行数][]
		int[][]	array=new int[3][];
		
	c、数据类型[][]	数组名={{},{},{}};
		int[][]	array={{1,2,3},{10,20,30},{100,200,300}}
	
	3、二维数组的遍历
	int[][]	array={{1,2,3},{10,20},{8,9,1,5,6}};
	a、下标遍历
	for(int i=0;i<array.length;i++){
			//array[i]本身是一个一维数组
			for(int j=0;j<array[i].length;j++){
				System.out.print(array[i][j]+",");
				
			}
			System.out.println("");
		}
	b、foreach遍历
		for(int[] elements:array){
			for(int element:elements){
				System.out.print(element+",");
			}
		}

四、数组的赋值与长度扩展
	int[] a=new int[8];
	int[] b={11,12,13,14,15};
		//复制数组
		//第一个参数:原数组
		//第二个参数:原数组的起始位置
		//第三个参数:目标数组
		//第四个参数:目标数组的起始位置
		//第五个参数:复制的长度
		System.arraycopy(b, 0, a, 2, 5);
		
		//长度扩展
		a=Arrays.copyOf(a, a.length+1);
		a[8]=101;
		
		注:Arrays是数组的辅助类











