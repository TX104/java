第10天
	2018/7/20

一、面向对象的特征
	1、封装
		把类中实现的过程与细节隐藏，把功能开发，符合面向对象的开闭原则
		方法是开，属性是闭
		9
	2、继承
		子类可以继承父类，拥有父类非私有的方法与属性
		java中是单继承，多实现
		
	3、多态
		同种事物的不同表现，称为多态，多态又分为类的多态与对象多态
		
		类多态:重写与重载
		
		对象多态:上转型对象、接口回调对象
		
	4、抽象
		抽象是设计与实现分离，达到高内聚，低耦合的编程思想
		
		设计:方法的定义
		实现:方法体里面的代码实现
		
		抽象类和接口是抽象的最好的表现形式，抽象类与接口天生用来继承
		
二、java的异常
	1、什么是异常
		在编程的过程中一些不确定的因素，导致程序发生了错误，称为异常，
		在java中提供了一整套异常处理机制
		
	*****java异常基类：java.lang.Throwable
	
	2、异常分类
	
	a、error错误:程序不能正常运行，程序本身没有办法解决，
	比如:jvm内存不足，硬盘容量不够
	
	b、Exception异常:程序可以运行，可以捕获的异常，程序本身能解决的异常
		1、checkedException：检查异常，在程序编写时发生的异常，这种异常一定要捕获异常
		
		2、RunTimeException：运行时异常，程序在运行时发生的异常，
							这种异常可以捕获，也可以不捕获
							
	3、异常的捕获
		异常使用try、catch、finally语句块来捕获，格式如下:
		
		try{	
			//要执行的代码块
		}catch(异常类型	对象名){
			//发生异常后执行的代码
		}finally{
			//最终执行的代码
		}
		
		异常捕获代码块的特点:
			a、不管发不发生异常，finally语句一定会走
			b、try可以搭配多个catch，异常类型子类放在前面，父类放在后面
			c、try与catch搭配、try与finally搭配，try不能单独使用
			
	4、throw throws
		throws:定义在方法里，声明需要抛出的异常
		
		throw:在方法体里内抛出一个异常对象
		
		catch可以接到throw抛出的异常对象
		
	5、自定义异常
		a、编写一个类继承Exception类,重写printStackTrace()异常信息方法，自定义异常信息
		
		b、在一个方法上throws抛出这个异常，在方法体内使用throw抛出异常对象
		
		c、在调用方法时，使用try、catch捕获这个异常下
		3
	6、方法的重写与重载
		方法的重写:发生在子类中，方法名相同，参数列表相同，返回值相同
				   访问修饰符不能比父类的更小，抛出的异常不能比父类的更大
				   
		方法的重载:发生在本类中，方法名相同，参数列表不同，与返回值无关
					与访问修饰符无关，与异常无关，与final无关
	
	
		方法的组成：访问修饰符、(final、abstract、static)、 返回值类型、方法名(参数列表)、异常、方法体
		
		java中的方法:普通方法、静态方法、构造方法、抽象方法、final方法
	
	
	
	
	
	
	
	
	
	
	
	
	
		